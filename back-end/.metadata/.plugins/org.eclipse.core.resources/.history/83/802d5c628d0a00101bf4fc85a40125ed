package tech.calendar.api.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.LinkedList;
import java.util.List;
import tech.calendar.api.database.Database;
import tech.calendar.api.entity.*;

@RestController
@RequestMapping("/clientes") //Url base do endpoint
public class ClientController {
	
	private Database database;
	
	public ClientController(String user, String key) {
		database = new Database("jdbc:mysql://localhost:3306/sistema_agenda", user, key);
	}
	
	private List<Client> getClients(String sql) throws SQLException{
		List<Client> list = new LinkedList<>();
		try(Connection conn = database.connect();
				Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql);){
			while(rs.next()) {
				int id = rs.getInt("id");
				String name = rs.getString("nome");
				String cpf = rs.getString("cpf");
				String date_birth = rs.getString("data_nascimento");
				String address = rs.getString("endereco");
				list.add(new Client(id, name, cpf, date_birth, address));
			}
			return list;
		}
	}
	
	private void errorHandling(SQLException e) {
		System.out.println("Falha ao consultar o banco de dados: " + e.getMessage());
	}
	
	@GetMapping
	public ResponseEntity<List<Client>> getListClients(){ //endpoint que retorna a lista completa de clientes
		String sql = "SELECT * FROM Cliente;";
		try {
			List<Client> list = getClients(sql);
			return ResponseEntity.ok(list);
		}
		catch(SQLException e) {
			System.out.println("Falha ao consultar o banco de dados: " + e.getMessage());
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
		}
	}
	
	@GetMapping("/{name}")
	public ResponseEntity<List<Client>> getClientByName(@PathVariable String name){;
		String sql = "SELECT * FROM Cliente WHERE nome LIKE '%" + name + "'%;";
		try {
			List<Client> list = getClients(sql);
			return ResponseEntity.ok(list);
		}
		catch(SQLException e) {
			System
		}
	}
}
